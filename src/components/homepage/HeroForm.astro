---
import AnimatedButton from "./AnimatedButton.astro"
import AnimatedInput from "./AnimatedInput.astro"
import Screenshots from "./Screenshots.astro"
---

<div class="hero">
<div class="left">
  <h1>
    <img src="/favicon.svg" alt="SHEF LABS TECHNOLOGY" width="64" />
    <span class="web">SHEF</span>
    <span class="check">LABS TECHNOLOGY</span>
  </h1>
  <div class="homepage-action-content">
    <h2>Advanced Cybersecurity<br />Analysis Platform</h2>
    <h3>
      Comprehensive security scanning in seconds
      <span>identify vulnerabilities before attackers do</span>
    </h3>
    <form name="live-start" autocomplete="off" action="/check" class="live-start" id="live-start">
      <label for="url">Enter a URL for security analysis üõ°Ô∏è</label>
      <AnimatedInput />
      <AnimatedButton />
    </form>
  </div>
</div>
<Screenshots />
</div>

<script>
  /**
   * Form management actions (validation, submission, etc.)
   * We just use normal, old school JavaScript for this
   */

  // Select the form and input elements from the DOM
  const form = document.getElementById('live-start');
  const urlInput = document.getElementById('url-input') as HTMLInputElement;
    
  // Submit Event - called when user submits form with a valid URL
  // Gets and checks the URL, then redirects user to /check/:url
  form?.addEventListener('submit', (event) => {
    event.preventDefault();
    const url = urlInput.value.trim();
    if (url) {
      const encodedUrl = encodeURIComponent(url);
      window.location.href = `/check/${encodedUrl}`;
    }
  });
  
  // User presses enter, forgets to add protocol
  // Will add https:// to the URL, and retry form submit
  urlInput?.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
      const url = urlInput.value.trim();
      const urlWithoutProtocolRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9.-]*\.[a-zA-Z]{2,}$/;
      if (url && !/^https?:\/\//i.test(url) && urlWithoutProtocolRegex.test(url)) {
        urlInput.value = 'https://' + url;
        form?.dispatchEvent(new Event('submit'));
      }
    }
  });
  </script>

<style lang="scss">
@import '@styles/global.scss';
.hero {
  display: flex;
  justify-content: space-around;
  width: 100vw;
  @include desktop-down {
    display: block;
    width: 80vw;
    margin: 0 auto;
  }
}
.left {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 20vh;
    @include tablet-landscape-down {
      gap: 6rem;
    }
    @include mobile-down {
      gap: 4rem;
    }
    h1 {
      margin: 0;
      font-size: 3.5em;
      font-family: 'Inter', sans-serif;
      font-weight: 800;
      z-index: 5;
      display: flex;
      gap: 0.2rem;
      align-items: center;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      img {
        vertical-align: middle;
        width: 4rem;
        margin-right: 0.8rem;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
      }
      .web {
        color: var(--text-color);
        font-weight: 800;
      }
      .check {
        color: var(--primary);
        font-weight: 600;
        font-style: italic;
      }
    }
    .homepage-action-content {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      max-width: 700px;
      z-index: 1;
      @include tablet-landscape-down {
        gap: 0.25rem;
      }
      h2 {
        font-size: 3.2rem;
        font-family: 'Inter', sans-serif;
        font-weight: 700;
        color: var(--text-color);
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        line-height: 1.2;
      }
      h3 {
        font-weight: 500;
        font-size: 1.4rem;
        font-family: 'Inter', sans-serif;
        color: var(--text-color-secondary);
        line-height: 1.4;
        span {
          color: var(--primary);
          font-weight: 600;
          font-style: italic;
        }
      }
      form {
        margin-top: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        label {
          font-size: 1.4rem;
          font-weight: 600;
          font-family: 'Inter', sans-serif;
          color: var(--text-color);
        }
      }
    }
  }
</style>
